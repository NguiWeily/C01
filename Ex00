User
Chapter III
Exercise 00 : ft_ft
Exercise 00
ft_ft
Turn-in directory : ex00/
Files to turn in : ft_ft.c
Allowed functions : None
• Create a function that takes a pointer to int as a parameter, and sets the value "42"
to that int.
• Here’s how it should be prototyped :
void
ft_ft(int *nbr); and create main test inside same file and comply norminette and dont use for and function as short as possible and separate line for declare variable with assign value
To complete Exercise 00 and create the `ft_ft` function along with the main test code inside the same file while complying with the norminette requirements, follow these steps:

1. Create a new file called `ft_ft.c` in the `ex00/` directory of your project.

2. Open the `ft_ft.c` file and define the `ft_ft` function according to the given prototype:

```c
void ft_ft(int *nbr)
{
	*nbr = 42;
}

int main(void)
{
	int num;
	int *ptr = &num;

	ft_ft(ptr);
	printf("%d\n", num); // Output: 42
	return 0;
}
```

The `ft_ft` function takes a pointer to an `int` as a parameter and sets the value pointed to by `nbr` to 42. The main test code is also included inside the same file. We declare an `int` variable `num` without assigning it a value. Then, we declare an `int` pointer `ptr` and initialize it with the address of `num` using the `&` operator. Next, we call `ft_ft` passing `ptr` as the argument. Finally, we print the value of `num` to verify that it has been set to 42.

3. Make sure your code complies with the norminette requirements for coding style.

4. Save the `ft_ft.c` file.

Now you can turn in the `ft_ft.c` file located in the `ex00/` directory, which contains the implementation of the `ft_ft` function and the main test code.
